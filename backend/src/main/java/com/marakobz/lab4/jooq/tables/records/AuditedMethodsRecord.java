/*
 * This file is generated by jOOQ.
 */
package com.marakobz.lab4.jooq.tables.records;


import com.marakobz.lab4.jooq.tables.AuditedMethods;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditedMethodsRecord extends TableRecordImpl<AuditedMethodsRecord> implements Record4<Integer, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.audited_methods.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.audited_methods.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.audited_methods.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.audited_methods.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.audited_methods.method_signature</code>.
     */
    public void setMethodSignature(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.audited_methods.method_signature</code>.
     */
    public String getMethodSignature() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.audited_methods.calling_date</code>.
     */
    public void setCallingDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.audited_methods.calling_date</code>.
     */
    public LocalDateTime getCallingDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AuditedMethods.AUDITED_METHODS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AuditedMethods.AUDITED_METHODS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return AuditedMethods.AUDITED_METHODS.METHOD_SIGNATURE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return AuditedMethods.AUDITED_METHODS.CALLING_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getMethodSignature();
    }

    @Override
    public LocalDateTime component4() {
        return getCallingDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getMethodSignature();
    }

    @Override
    public LocalDateTime value4() {
        return getCallingDate();
    }

    @Override
    public AuditedMethodsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AuditedMethodsRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuditedMethodsRecord value3(String value) {
        setMethodSignature(value);
        return this;
    }

    @Override
    public AuditedMethodsRecord value4(LocalDateTime value) {
        setCallingDate(value);
        return this;
    }

    @Override
    public AuditedMethodsRecord values(Integer value1, Integer value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditedMethodsRecord
     */
    public AuditedMethodsRecord() {
        super(AuditedMethods.AUDITED_METHODS);
    }

    /**
     * Create a detached, initialised AuditedMethodsRecord
     */
    public AuditedMethodsRecord(Integer id, Integer userId, String methodSignature, LocalDateTime callingDate) {
        super(AuditedMethods.AUDITED_METHODS);

        setId(id);
        setUserId(userId);
        setMethodSignature(methodSignature);
        setCallingDate(callingDate);
    }
}
